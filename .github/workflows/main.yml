# GithHub Actions Workflow generated with Ghygen
# Original configuration: https://ghygen.hi-folks.dev?code=13ea42468a35bbb5d58d88b743ac5a44
name: Template - PHP Package
on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    laravel-tests:
        runs-on: ubuntu-latest
        # Service container Mysql mysql
        services:
            # Label used to access the service container
            mysql:
                # Docker Hub image (also with version)
                image: mysql:latest
                env:
                    MYSQL_ROOT_PASSWORD: secrets
                    MYSQL_DATABASE:  forge
                ## map the "external" 33306 port with the "internal" 3306
                ports:
                    - 33306:3306
                # Set health checks to wait until mysql database has started (it takes some seconds to start)
                options: >-
                    --health-cmd="mysqladmin ping"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=3

        strategy:
            matrix:
                operating-system: [ubuntu-latest]
                php-versions: [ '8.2','8.1' ]
                dependency-stability: [ 'prefer-stable' ]

                laravel: [ '10.*' ]
                include:
                    - laravel:  10.*
                      testbench: 8.*

        name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

        steps:
            - uses: actions/checkout@v3
            - name: Install PHP versions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
            - name: Get Composer Cache Directory 2
              id: composer-cache
              run: |
                  echo "::set-output name=dir::$(composer config cache-files-dir)"
            - uses: actions/cache@v3
              id: actions-cache
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-
            - name: Cache PHP dependencies
              uses: actions/cache@v3
              id: vendor-cache
              with:
                  path: vendor
                  key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}
            - name: Copy .env
              run: php -r "file_exists('.env') || copy('.env.testing', '.env');"
            - name: Install Laravel Dependencies
              run: |
                  composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
                  composer update --${{ matrix.dependency-stability }} --prefer-dist --no-interaction --no-suggest

            - name: Update Dependencies with latest stable
              if: matrix.dependency-stability == 'prefer-stable'
              run: composer update --prefer-stable
            - name: Update Dependencies with lowest stable
              if: matrix.dependency-stability == 'prefer-lowest'
              run: composer update --prefer-stable --prefer-lowest


            - name: Show dir
              run: pwd
            - name: PHP Version
              run: php --version

            # Code quality
            - name: Execute tests (Unit and Feature tests) via PHPUnit
                # Set environment
              env:
                  DB_CONNECTION: mysql
                  DB_DATABASE: forge
                  DB_PORT: 33306
                  DB_USER: forge
                  DB_PASSWORD: secrets

              run: vendor/bin/phpunit --testdox